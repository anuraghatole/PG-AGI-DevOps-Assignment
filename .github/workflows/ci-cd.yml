name: CI/CD Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  FRONTEND_ECR_REPO: ${{ secrets.FRONTEND_ECR_REPO }}
  BACKEND_ECR_REPO: ${{ secrets.BACKEND_ECR_REPO }}

jobs:
  build:
    name: Build Frontend & Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # ----- FRONTEND BUILD -----
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      # ----- BACKEND BUILD -----
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install backend dependencies
        working-directory: backend
        run: pip install -r requirements.txt

  test:
    name: Test Frontend & Backend
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # ----- FRONTEND TEST -----
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Run frontend tests
        working-directory: frontend/test_scripts
        run: |
          npm install --prefix ../
          npm test ../

      # ----- BACKEND TEST -----
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install backend dependencies
        working-directory: backend
        run: pip install -r requirements.txt

      - name: Run backend tests
        working-directory: backend/test_scripts
        run: pytest ../

  push:
    name: Docker Build & Push to ECR
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # ----- AWS LOGIN -----
      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin public.ecr.aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # ----- Generate SHORT SHA -----
      - name: Extract short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      # ----- DOCKER BUILD + PUSH -----
      - name: Build & Push Backend Image
        run: |
          docker build -t $BACKEND_ECR_REPO:$SHORT_SHA ./backend
          docker push $BACKEND_ECR_REPO:$SHORT_SHA

      - name: Build & Push Frontend Image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            -t $FRONTEND_ECR_REPO:$SHORT_SHA ./frontend
          docker push $FRONTEND_ECR_REPO:$SHORT_SHA
